service: medifax-backend-customers

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: python2.7
  profile: serverless
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux

package:
  exclude:
      - env/** # virtualenv
  individually: true

functions:
  create:
    handler: customers/create.create
    events:
      - http:
          path: customers/create
          method: post
          cors: true

  list:
    handler: customers/list.list
    events:
      - http:
          path: customers/list
          method: get
          cors: true

  get:
    handler: customers/get.get
    events:
      - http:
          path: customers/{id}
          method: get
          cors: true

  share:
    handler: customers/share.share
    events:
      - http:
          path: customers/share/{id}
          method: post
          cors: true

  onetimes3url:
    handler: customers/onetimes3url.onetimes3url
    events:
      - http:
          path: customers/onetimes3url
          method: post
          cors: true

  update:
    handler: customers/update.update
    events:
      - http:
          path: customers/update/{id}
          method: post
          cors: true

  delete:
    handler: customers/delete.delete
    events:
      - http:
          path: customers/{id}
          method: delete
          cors: true

  auth:
    handler: customers/auth.auth
    events:
      - http:
          path: customers/auth
          method: post
          cors: true
resources:
  Resources:
    CustomersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

        TableName: ${self:provider.environment.DYNAMODB_TABLE}
